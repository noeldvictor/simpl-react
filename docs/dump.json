[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/actions/index.js",
    "content": "import messages from './messages';\nimport simpl from './simpl';\nimport state from './state';\n\n\n/**\n * An [FSA](https://github.com/acdlite/flux-standard-action)-compliant Redux\n * Action.\n * @typedef {function} ReduxAction\n*/\n\nexport const MessagesActions = messages;\nexport const SimplActions = simpl;\nexport const StateActions = state;\n/**\n * @namespace actions\n * @memberof Simpl\n */\nexport default {\n  messages,\n  simpl,\n  state,\n};\n",
    "static": true,
    "longname": "src/actions/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "typedef",
    "name": "ReduxAction",
    "memberof": "src/actions/index.js",
    "static": true,
    "longname": "src/actions/index.js~ReduxAction",
    "access": null,
    "description": "An [FSA](https://github.com/acdlite/flux-standard-action)-compliant Redux\nAction.",
    "lineNumber": 12,
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "ReduxAction"
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "SimplActions",
    "memberof": "src/actions/index.js",
    "static": true,
    "longname": "src/actions/index.js~SimplActions",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/index",
    "importStyle": "{SimplActions}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "StateActions",
    "memberof": "src/actions/index.js",
    "static": true,
    "longname": "src/actions/index.js~StateActions",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/index",
    "importStyle": "{StateActions}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "file",
    "name": "src/actions/messages.js",
    "content": "import { createAction } from 'redux-actions';\n\n/*\n * action creators\n */\n\nexport const appendMessage = createAction('simpl/MESSAGE_APPEND');\nexport const updateMessage = createAction('simpl/MESSAGE_UPDATE');\n\n\n/**\n * @namespace messages\n * @memberof Simpl.actions\n */\nexport default {\n  appendMessage,\n  updateMessage,\n};\n",
    "static": true,
    "longname": "src/actions/messages.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "appendMessage",
    "memberof": "src/actions/messages.js",
    "static": true,
    "longname": "src/actions/messages.js~appendMessage",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/messages",
    "importStyle": "{appendMessage}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "name": "updateMessage",
    "memberof": "src/actions/messages.js",
    "static": true,
    "longname": "src/actions/messages.js~updateMessage",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/messages",
    "importStyle": "{updateMessage}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "src/actions/simpl.js",
    "content": "import { createAction } from 'redux-actions';\nimport AutobahnReact from '../autobahn';\n\n/*\n * action creators\n */\n\nexport const addChild = createAction('simpl/CHILD_ADD');\nexport const removeChild = createAction('simpl/CHILD_REMOVE');\n\n/**\n * Given a scope's topic, returns a recursive representation of that scope and\n * its children.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {string} scope - the scope's topic\n * @returns {NamedReduxAction}\n */\nexport const getDataTree = createAction('simpl/DATATREE_GET', (scope, ...args) => (\n  AutobahnReact.call(`${scope}.get_scope_tree`, args)\n));\n\n/**\n * Given a scope's topic, returns a list of runusers that belong to the scope.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {string} scope - the scope's topic\n * @returns {NamedReduxAction}\n */\nexport const getRunUsers = createAction('simpl/RUNUSERS_GET', (scope, ...args) => (\n  AutobahnReact.call(`${scope}.get_active_runusers`, args)\n));\n\n/**\n * Set the connection status on the store.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {symbol} status - the connection status.\n * @returns {NamedReduxAction}\n */\nexport const setConnectionStatus = createAction('simpl/SET_CONNECTION_STATUS');\n\n/**\n * Update the scope in the redux state with the received payload.\n *\n * The payload\n * must contain a `resource_name` property (eg: `'decision'`, `'result'`, etc.)\n * and a `pk` property, to properly identify the correct scope to be updated.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {object} scope - the scope's JSON representation\n * @returns {NamedReduxAction}\n */\nexport const updateScope = createAction('simpl/SCOPE_UPDATE');\n\n\n/**\n * Dispatched when the client is ready to listen to a specific scope.\n *\n * Currently only used for debugging purposes.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {string} scope - the scope's topic\n * @returns {NamedReduxAction}\n */\nexport const connectedScope = createAction('simpl/SCOPE_CONNECTED', (scope, ...args) => (\n  AutobahnReact.publish(`${scope}.connected`, args)\n));\n\n/**\n * Dispatched when the client gets disconnected and can't listen to the scope.\n *\n * Currently only used for debugging purposes.\n * @function\n * @memberof Simpl.actions.simpl\n * @param {string} topic - the scope's topic\n * @returns {NamedReduxAction}\n */\nexport const disconnectedScope = createAction('simpl/SCOPE_DISCONNECTED', (topic, ...args) => (\n  AutobahnReact.publish(`${topic}.disconnected`, args)\n));\n\nexport const getCurrentRunPhase = createAction('simpl/CURRENT_RUN', (topic, ...args) => (\n  AutobahnReact.call(`${topic}.get_current_run_and_phase`, args)\n));\n\nexport const getPhases = createAction('simpl/GET_PHASES', (topic, ...args) => (\n  AutobahnReact.call(`${topic}.get_phases`, args)\n));\n\nexport const getRoles = createAction('simpl/GET_ROLES', (topic, ...args) => (\n  AutobahnReact.call(`${topic}.get_roles`, args)\n));\n\nexport const showGenericError = createAction('simpl/SHOW_GENERIC_ERROR');\n\n/**\n * Populate simpl.scenario with current runuser's scenarios.\n *\n * @function\n * @memberof Simpl.actions.simpl\n * @param {String} topic - The runuser's topic.\n * @returns {NamedReduxAction}\n */\nexport const getRunUserScenarios = createAction('simpl/GET_RUNUSER_SCENARIOS', (topic) => (\n  AutobahnReact.call(`${topic}.get_scenarios`)\n));\n\n/**\n * Populate simpl.current_runuser object with current runuser's info.\n *\n * @function\n * @memberof Simpl.actions.simpl\n * @param {Number} simpl_id - The user id on simpl-games-api.\n * @returns {NamedReduxAction}\n */\nexport const getRunUserInfo = createAction('simpl/GET_RUNUSER_INFO');\n\n/**\n * Remove the most recent error from the store.\n *\n * @function\n * @memberof Simpl.actions.simpl\n * @returns {NamedReduxAction}\n */\nexport const popError = createAction('simpl/POP_ERROR');\n\n\n/**\n * @namespace simpl\n * @memberof Simpl.actions\n */\nexport default {\n  addChild,\n  removeChild,\n\n  getDataTree,\n  getRunUsers,\n  updateScope,\n  connectedScope,\n  disconnectedScope,\n  getCurrentRunPhase,\n  getRunUserInfo,\n  getPhases,\n  getRoles,\n  popError,\n};\n",
    "static": true,
    "longname": "src/actions/simpl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "name": "addChild",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~addChild",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{addChild}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "name": "removeChild",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~removeChild",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{removeChild}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "getDataTree",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getDataTree",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getDataTree}",
    "description": "Given a scope's topic, returns a recursive representation of that scope and\nits children.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "the scope's topic"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "getRunUsers",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getRunUsers",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getRunUsers}",
    "description": "Given a scope's topic, returns a list of runusers that belong to the scope.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "the scope's topic"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "setConnectionStatus",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~setConnectionStatus",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{setConnectionStatus}",
    "description": "Set the connection status on the store.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "the connection status."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "name": "updateScope",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~updateScope",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{updateScope}",
    "description": "Update the scope in the redux state with the received payload.\n\nThe payload\nmust contain a `resource_name` property (eg: `'decision'`, `'result'`, etc.)\nand a `pk` property, to properly identify the correct scope to be updated.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "the scope's JSON representation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "connectedScope",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~connectedScope",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{connectedScope}",
    "description": "Dispatched when the client is ready to listen to a specific scope.\n\nCurrently only used for debugging purposes.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "the scope's topic"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "name": "disconnectedScope",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~disconnectedScope",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{disconnectedScope}",
    "description": "Dispatched when the client gets disconnected and can't listen to the scope.\n\nCurrently only used for debugging purposes.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "the scope's topic"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "name": "getCurrentRunPhase",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getCurrentRunPhase",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getCurrentRunPhase}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "name": "getPhases",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getPhases",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getPhases}",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "name": "getRoles",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getRoles",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getRoles}",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "showGenericError",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~showGenericError",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{showGenericError}",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "getRunUserScenarios",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getRunUserScenarios",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getRunUserScenarios}",
    "description": "Populate simpl.scenario with current runuser's scenarios.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "The runuser's topic."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "name": "getRunUserInfo",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~getRunUserInfo",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{getRunUserInfo}",
    "description": "Populate simpl.current_runuser object with current runuser's info.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "simpl_id",
        "description": "The user id on simpl-games-api."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "name": "popError",
    "memberof": "src/actions/simpl.js",
    "static": true,
    "longname": "src/actions/simpl.js~popError",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/simpl",
    "importStyle": "{popError}",
    "description": "Remove the most recent error from the store.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{NamedReduxAction}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NamedReduxAction"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "file",
    "name": "src/actions/state.js",
    "content": "import { createAction } from 'redux-actions';\n\nexport const recyleStateAction = createAction('simpl/RECYCLE_STATE');\n\n/**\n * @namespace state\n * @memberof Simpl.actions\n */\nexport default {\n  recyleStateAction,\n};\n",
    "static": true,
    "longname": "src/actions/state.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 24,
    "kind": "variable",
    "name": "recyleStateAction",
    "memberof": "src/actions/state.js",
    "static": true,
    "longname": "src/actions/state.js~recyleStateAction",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/actions/state",
    "importStyle": "{recyleStateAction}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "src/autobahn.js",
    "content": "import Autobahn from 'autobahn-react';\n\nexport const AutobahnReact = Autobahn;\n\nexport default AutobahnReact;\n",
    "static": true,
    "longname": "src/autobahn.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "name": "AutobahnReact",
    "memberof": "src/autobahn.js",
    "static": true,
    "longname": "src/autobahn.js~AutobahnReact",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/autobahn",
    "importStyle": "{AutobahnReact}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "file",
    "name": "src/components/Progress.react.js",
    "content": "import React from 'react';\n\nimport { CONNECTION_STATUS } from '../constants';\n\n\nfunction Progress(props) {\n  let text;\n  if (props.connectionStatus === CONNECTION_STATUS.CONNECTING) {\n    text = 'Connecting…';\n  } else if (props.connectionStatus === CONNECTION_STATUS.CONNECTED) {\n    text = 'Loading data…';\n  } else if (props.connectionStatus === CONNECTION_STATUS.OFFLINE) {\n    text = 'Connection lost. If this persist, please contact the administrator.';\n  }\n  return (<div>{text}</div>);\n}\n\nProgress.propTypes = {\n  connectionStatus: React.PropTypes.string.isRequired,\n};\n\nexport default Progress;\n",
    "static": true,
    "longname": "src/components/Progress.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "Progress",
    "memberof": "src/components/Progress.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Progress.react.js~Progress",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/Progress.react",
    "importStyle": "Progress",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "src/components/RPCCaller.react.js",
    "content": "import React from 'react';\nimport { calls } from '../decorators/rpc';\n\n\n/**\n * @class RPCCaller\n * @extends {React.Component}\n * @memberof Simpl.components\n */\nclass RPCCaller extends React.Component {\n  componentWillMount() {\n    // eslint-disable-next-line react/prop-types\n    const Child = React.Children.only(this.props.children).type;\n    this.RpcContainer = calls(Child, this.props.callee, this.props.options);\n  }\n  render() {\n    return (\n      <div>\n        <this.RpcContainer {...this.props} {...this.state} />\n      </div>\n    );\n  }\n}\n\nRPCCaller.propTypes = {\n  callee: React.PropTypes.string.isRequired,\n  options: React.PropTypes.object,\n};\n\nexport default RPCCaller;\n",
    "static": true,
    "longname": "src/components/RPCCaller.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "class",
    "name": "RPCCaller",
    "memberof": "src/components/RPCCaller.react.js",
    "static": true,
    "longname": "src/components/RPCCaller.react.js~RPCCaller",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/RPCCaller.react",
    "importStyle": "RPCCaller",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RPCCaller"
      }
    ],
    "interface": false,
    "extends": [
      "React.Component"
    ]
  },
  {
    "__docId__": 31,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "src/components/RPCCaller.react.js~RPCCaller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/RPCCaller.react.js~RPCCaller#componentWillMount",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "RpcContainer",
    "memberof": "src/components/RPCCaller.react.js~RPCCaller",
    "static": false,
    "longname": "src/components/RPCCaller.react.js~RPCCaller#RpcContainer",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/RPCCaller.react.js~RPCCaller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/RPCCaller.react.js~RPCCaller#render",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "file",
    "name": "src/components/TopicPublisher.react.js",
    "content": "import React from 'react';\n\nimport { publishes } from '../decorators/pubsub/publishes';\n\n\n/**\n * @class TopicPublisher\n * @extends {React.Component}\n * @memberof Simpl.components\n */\nclass TopicPublisher extends React.Component {\n  componentWillMount() {\n    // eslint-disable-next-line react/prop-types\n    const Child = React.Children.only(this.props.children).type;\n    this.Publisher = publishes(Child, this.props.topic, this.props.options);\n  }\n  componentWillUpdate(nextProps) {\n    const Child = React.Children.only(nextProps.children).type;\n    this.Publisher = publishes(Child, nextProps.topic, nextProps.options);\n  }\n  render() {\n    return (\n      <div>\n        <this.Publisher {...this.props} {...this.state} />\n      </div>\n    );\n  }\n}\n\nTopicPublisher.propTypes = {\n  topic: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.func,\n  ]).isRequired,\n  options: React.PropTypes.object,\n};\n\nexport default TopicPublisher;\n",
    "static": true,
    "longname": "src/components/TopicPublisher.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 35,
    "kind": "class",
    "name": "TopicPublisher",
    "memberof": "src/components/TopicPublisher.react.js",
    "static": true,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/TopicPublisher.react",
    "importStyle": "TopicPublisher",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopicPublisher"
      }
    ],
    "interface": false,
    "extends": [
      "React.Component"
    ]
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "src/components/TopicPublisher.react.js~TopicPublisher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher#componentWillMount",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "Publisher",
    "memberof": "src/components/TopicPublisher.react.js~TopicPublisher",
    "static": false,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher#Publisher",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "componentWillUpdate",
    "memberof": "src/components/TopicPublisher.react.js~TopicPublisher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher#componentWillUpdate",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "member",
    "name": "Publisher",
    "memberof": "src/components/TopicPublisher.react.js~TopicPublisher",
    "static": false,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher#Publisher",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/TopicPublisher.react.js~TopicPublisher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/TopicPublisher.react.js~TopicPublisher#render",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "src/components/TopicSubscriber.react.js",
    "content": "import React from 'react';\n\nimport { subscribes } from '../decorators/pubsub/subscribes';\n\n\n/**\n * @class TopicSubscriber\n * @extends {React.Component}\n * @memberof Simpl.components\n */\nclass TopicSubscriber extends React.Component {\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const Child = React.Children.only(this.props.children).type;\n    const SubscribedChild = subscribes(Child, this.props.topic, this.props.options);\n\n    return (\n      <div>\n        <SubscribedChild {...this.props} {...this.state} />\n      </div>\n    );\n  }\n}\n\nTopicSubscriber.propTypes = {\n  topic: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.func,\n  ]).isRequired,\n  options: React.PropTypes.object,\n};\n\n\nexport default TopicSubscriber;\n",
    "static": true,
    "longname": "src/components/TopicSubscriber.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "class",
    "name": "TopicSubscriber",
    "memberof": "src/components/TopicSubscriber.react.js",
    "static": true,
    "longname": "src/components/TopicSubscriber.react.js~TopicSubscriber",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/TopicSubscriber.react",
    "importStyle": "TopicSubscriber",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopicSubscriber"
      }
    ],
    "interface": false,
    "extends": [
      "React.Component"
    ]
  },
  {
    "__docId__": 43,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/TopicSubscriber.react.js~TopicSubscriber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/TopicSubscriber.react.js~TopicSubscriber#render",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "file",
    "name": "src/components/forms/CurrencyInput.react.js",
    "content": "/**\n * @namespace CurrencyInput\n * @memberof Simpl.components.forms\n */\nimport React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\nimport { min, max } from './validators';\nimport { decimalPlaces } from './formatters';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <InputGroup.Addon>{props.currency}</InputGroup.Addon>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'number',\n  decimalPlaces: 2,\n  currency: '$',\n};\n\nInput.propTypes = Object.assign({}, inputPropTypes, {\n  min: React.PropTypes.number,\n  max: React.PropTypes.number,\n  step: React.PropTypes.number,\n  decimalPlaces: React.PropTypes.number,\n  currency: React.PropTypes.string,\n});\n\n/**\n * A component that allows entering a decimal value and always shows it with fixed\n * precision, prefixed by a currency symbol.\n\n * Default validation options:\n *  * `errors`: ['isCurrency', {@link min}, {@link max}],\n *  * `sanitizers`: `['toFloat']`\n *  * `formatters`: [{@link decimalPlaces}]\n *\n * Default props: `{type: 'number', decimalPlaces: 2, currency: '$'}`\n * @namespace CurrencyInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const CurrencyInput = validateField({\n  errors: ['isCurrency', min, max],\n  sanitizers: ['toFloat'],\n  formatters: [decimalPlaces],\n})(Input);\n\nexport default CurrencyInput;\n",
    "static": true,
    "longname": "src/components/forms/CurrencyInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/CurrencyInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/CurrencyInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/CurrencyInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "name": "CurrencyInput",
    "memberof": "src/components/forms/CurrencyInput.react.js",
    "static": true,
    "longname": "src/components/forms/CurrencyInput.react.js~CurrencyInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/CurrencyInput.react",
    "importStyle": "{CurrencyInput}",
    "description": "A component that allows entering a decimal value and always shows it with fixed\nprecision, prefixed by a currency symbol.\n\nDefault validation options:\n * `errors`: ['isCurrency', {@link min}, {@link max}],\n * `sanitizers`: `['toFloat']`\n * `formatters`: [{@link decimalPlaces}]\n\nDefault props: `{type: 'number', decimalPlaces: 2, currency: '$'}`",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "CurrencyInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "src/components/forms/DecimalInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\nimport { min, max } from './validators';\nimport { decimalPlaces } from './formatters';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'number',\n  decimalPlaces: 2,\n};\n\nInput.propTypes = Object.assign({}, inputPropTypes, {\n  min: React.PropTypes.number,\n  max: React.PropTypes.number,\n  step: React.PropTypes.number,\n  decimalPlaces: React.PropTypes.number,\n});\n\n\n/**\n * A component that allows entering a decimal value and always shows it with fixed\n * precision.\n\n * Default validation options:\n *  * `errors`: ['isDecimal', {@link min}, {@link max}],\n *  * `sanitizers`: `['toFloat']`\n *  * `formatters`: [{@link decimalPlaces}]\n *\n * Default props: `{type: 'number', decimalPlaces: 2}`\n * @namespace DecimalInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const DecimalInput = validateField({\n  errors: ['isDecimal', min, max],\n  sanitizers: ['toFloat'],\n  formatters: [decimalPlaces],\n})(Input);\n\nexport default DecimalInput;\n",
    "static": true,
    "longname": "src/components/forms/DecimalInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/DecimalInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/DecimalInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/DecimalInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "DecimalInput",
    "memberof": "src/components/forms/DecimalInput.react.js",
    "static": true,
    "longname": "src/components/forms/DecimalInput.react.js~DecimalInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/DecimalInput.react",
    "importStyle": "{DecimalInput}",
    "description": "A component that allows entering a decimal value and always shows it with fixed\nprecision.\n\nDefault validation options:\n * `errors`: ['isDecimal', {@link min}, {@link max}],\n * `sanitizers`: `['toFloat']`\n * `formatters`: [{@link decimalPlaces}]\n\nDefault props: `{type: 'number', decimalPlaces: 2}`",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "DecimalInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/components/forms/EmailInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <InputGroup.Addon>@</InputGroup.Addon>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'email',\n};\n\nInput.propTypes = inputPropTypes;\n\n\n/**\n * A component that allows entering and eamil address.\n\n * Default validation options:\n *  * `errors`: `['isEmail']`,\n *  * `sanitizers`: `['normalizeEmail']`\n *\n * Default props: `{type: 'email'}`\n * @namespace EmailInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const EmailInput = validateField({\n  errors: ['isEmail'],\n  sanitizers: ['normalizeEmail'],\n})(Input);\n\n\nexport default EmailInput;\n",
    "static": true,
    "longname": "src/components/forms/EmailInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/EmailInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/EmailInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/EmailInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "EmailInput",
    "memberof": "src/components/forms/EmailInput.react.js",
    "static": true,
    "longname": "src/components/forms/EmailInput.react.js~EmailInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/EmailInput.react",
    "importStyle": "{EmailInput}",
    "description": "A component that allows entering and eamil address.\n\nDefault validation options:\n * `errors`: `['isEmail']`,\n * `sanitizers`: `['normalizeEmail']`\n\nDefault props: `{type: 'email'}`",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "EmailInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/components/forms/FloatInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\nimport { min, max } from './validators';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'number',\n  step: 0.1,\n};\n\nInput.propTypes = Object.assign({}, inputPropTypes, {\n  min: React.PropTypes.number,\n  max: React.PropTypes.number,\n  step: React.PropTypes.number,\n  decimalPlaces: React.PropTypes.number,\n});\n\n/**\n * A component that allows entering a float number.\n\n * Default validation options:\n *  * `errors`: ['isFloat', {@link min}, {@link max}],\n *  * `sanitizers`: `['toFloat']`\n *\n * Default props: `{type: 'number', step: 0.1}`\n * @namespace FloatInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const FloatInput = validateField({\n  errors: ['isFloat', min, max],\n  sanitizers: ['toFloat'],\n})(Input);\n\nexport default FloatInput;\n",
    "static": true,
    "longname": "src/components/forms/FloatInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/FloatInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/FloatInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/FloatInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "FloatInput",
    "memberof": "src/components/forms/FloatInput.react.js",
    "static": true,
    "longname": "src/components/forms/FloatInput.react.js~FloatInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/FloatInput.react",
    "importStyle": "{FloatInput}",
    "description": "A component that allows entering a float number.\n\nDefault validation options:\n * `errors`: ['isFloat', {@link min}, {@link max}],\n * `sanitizers`: `['toFloat']`\n\nDefault props: `{type: 'number', step: 0.1}`",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "FloatInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/components/forms/IntegerInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\nimport { min, max } from './validators';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'number',\n};\n\nInput.propTypes = Object.assign({}, inputPropTypes, {\n  min: React.PropTypes.number,\n  max: React.PropTypes.number,\n  step: React.PropTypes.number,\n});\n\n/**\n * A component that allows entering an integer number.\n\n * Default validation options:\n *  * `errors`: ['isInt', {@link min}, {@link max}],\n *  * `sanitizers`: `['toInt']`\n *\n * Default props: `{type: 'number'}`\n * @namespace IntegerInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const IntegerInput = validateField({\n  errors: ['isInt', min, max],\n  sanitizers: ['toInt'],\n})(Input);\n\n\nexport default IntegerInput;\n",
    "static": true,
    "longname": "src/components/forms/IntegerInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/IntegerInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/IntegerInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/IntegerInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "IntegerInput",
    "memberof": "src/components/forms/IntegerInput.react.js",
    "static": true,
    "longname": "src/components/forms/IntegerInput.react.js~IntegerInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/IntegerInput.react",
    "importStyle": "{IntegerInput}",
    "description": "A component that allows entering an integer number.\n\nDefault validation options:\n * `errors`: ['isInt', {@link min}, {@link max}],\n * `sanitizers`: `['toInt']`\n\nDefault props: `{type: 'number'}`",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "IntegerInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/components/forms/NumberInput.react.js",
    "content": "\nimport React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\nimport { min, max } from './validators';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'number',\n};\n\nInput.propTypes = Object.assign({}, inputPropTypes, {\n  min: React.PropTypes.number,\n  max: React.PropTypes.number,\n  step: React.PropTypes.number,\n});\n\n/**\n * A component to validate a number.\n\n * Default validation options:\n *  * `errors`: [{@link min}, {@link max}],\n *  * `sanitizers`: `['toFloat']`\n *\n * Default props: `{type: 'number'}`\n * @namespace NumberInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const NumberInput = validateField({\n  errors: [min, max],\n  sanitizers: ['toFloat'],\n})(Input);\n\nexport default NumberInput;\n",
    "static": true,
    "longname": "src/components/forms/NumberInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/NumberInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/NumberInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/NumberInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "NumberInput",
    "memberof": "src/components/forms/NumberInput.react.js",
    "static": true,
    "longname": "src/components/forms/NumberInput.react.js~NumberInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/NumberInput.react",
    "importStyle": "{NumberInput}",
    "description": "A component to validate a number.\n\nDefault validation options:\n * `errors`: [{@link min}, {@link max}],\n * `sanitizers`: `['toFloat']`\n\nDefault props: `{type: 'number'}`",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "NumberInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/components/forms/PasswordInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n          type=\"password\"\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.propTypes = inputPropTypes;\n\n/**\n * A component for entering a password. The `type` props is hardcoded to `'password'`.\n *\n * @namespace PasswordInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const PasswordInput = validateField({\n})(Input);\n\nexport default PasswordInput;\n",
    "static": true,
    "longname": "src/components/forms/PasswordInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/PasswordInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/PasswordInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/PasswordInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "PasswordInput",
    "memberof": "src/components/forms/PasswordInput.react.js",
    "static": true,
    "longname": "src/components/forms/PasswordInput.react.js~PasswordInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/PasswordInput.react",
    "importStyle": "{PasswordInput}",
    "description": "A component for entering a password. The `type` props is hardcoded to `'password'`.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "PasswordInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/components/forms/TextInput.react.js",
    "content": "import React from 'react';\nimport { FormControl, FormGroup, HelpBlock, InputGroup } from 'react-bootstrap';\n\nimport { validateField } from '../../decorators/forms/validates';\nimport { inputPropTypes, getInputProps } from './props';\n\n\nfunction Input(props) {\n  const errors = props.messages.map((msg) => <HelpBlock key={msg}>{msg}</HelpBlock>);\n\n  return (\n    <FormGroup\n      validationState={props.validationState}\n    >\n      <InputGroup>\n        <FormControl\n          {...getInputProps(props)}\n        />\n      </InputGroup>\n      {errors}\n    </FormGroup>\n  );\n}\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nInput.propTypes = inputPropTypes;\n\n/**\n * A component that allows entering text.\n\n * Default validation options: `{sanitizers: ['trim']}`\n\n * Default props: `{type: 'text'}`\n * @namespace TextInput\n * @memberof Simpl.components.forms\n * @type {ReactElement}\n * @extends React.Component\n */\nexport const TextInput = validateField({\n  sanitizers: ['trim'],\n})(Input);\n\nexport default TextInput;\n",
    "static": true,
    "longname": "src/components/forms/TextInput.react.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/forms/TextInput.react.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/TextInput.react.js~Input",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/components/forms/TextInput.react",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "TextInput",
    "memberof": "src/components/forms/TextInput.react.js",
    "static": true,
    "longname": "src/components/forms/TextInput.react.js~TextInput",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/TextInput.react",
    "importStyle": "{TextInput}",
    "description": "A component that allows entering text.\n\nDefault validation options: `{sanitizers: ['trim']}`\n\nDefault props: `{type: 'text'}`",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@namespace",
        "tagValue": "TextInput"
      },
      {
        "tagName": "@extends",
        "tagValue": "React.Component"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/components/forms/formatters.js",
    "content": "/**\n * Return a fixed-precision representation of the given value, according to\n * `props.decimalPlaces`\n *\n * @param      {string}  value     The input value\n * @param      {object}  ownProps  The component's own properties\n * @return     {string|null}  The formatted valued, or `null` if `value` is the\n * emptry string.\n */\nexport const decimalPlaces = function decimalPlaces(value, ownProps) {\n  if (value === '') {\n    return null;\n  }\n  const float = parseFloat(value);\n  if (isNaN(float)) {\n    return null;\n  }\n  return float.toFixed(ownProps.decimalPlaces);\n};\n",
    "static": true,
    "longname": "src/components/forms/formatters.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "decimalPlaces",
    "memberof": "src/components/forms/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/formatters.js~decimalPlaces",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/formatters",
    "importStyle": "{decimalPlaces}",
    "description": "Return a fixed-precision representation of the given value, according to\n`props.decimalPlaces`",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The input value"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "The component's own properties"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "The formatted valued, or `null` if `value` is the\nemptry string."
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/components/forms/index.js",
    "content": "import CurrencyInput from './CurrencyInput.react';\nimport DecimalInput from './DecimalInput.react';\nimport EmailInput from './EmailInput.react';\nimport FloatInput from './FloatInput.react';\nimport IntegerInput from './IntegerInput.react';\nimport NumberInput from './NumberInput.react';\nimport PasswordInput from './PasswordInput.react';\nimport TextInput from './TextInput.react';\n\n/**\n * @namespace forms\n * @memberof Simpl.components\n */\nexport default {\n  CurrencyInput,\n  DecimalInput,\n  EmailInput,\n  FloatInput,\n  IntegerInput,\n  NumberInput,\n  PasswordInput,\n  TextInput,\n};\n",
    "static": true,
    "longname": "src/components/forms/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/components/forms/props.js",
    "content": "import React from 'react';\n\n\nexport const inputPropTypes = {\n  errors: React.PropTypes.array,\n  warning: React.PropTypes.array,\n  sanitizers: React.PropTypes.array,\n  formatters: React.PropTypes.array,\n  messages: React.PropTypes.array,\n  validationState: React.PropTypes.string,\n\n  id: React.PropTypes.string,\n  name: React.PropTypes.string.isRequired,\n  onBlur: React.PropTypes.func,\n  onChange: React.PropTypes.func,\n  onFocus: React.PropTypes.func,\n  readOnly: React.PropTypes.bool,\n  required: React.PropTypes.bool,\n  type: React.PropTypes.string,\n  value: React.PropTypes.any,\n\n  disabled: React.PropTypes.bool,\n  maxLength: React.PropTypes.number,\n  placeholder: React.PropTypes.string,\n};\n\n\nexport const reduxFormPropTypes = {\n  error: React.PropTypes.any,\n  handleSubmit: React.PropTypes.func,\n  input: React.PropTypes.object,\n  label: React.PropTypes.string,\n  meta: React.PropTypes.object,\n  pristine: React.PropTypes.bool,\n  reset: React.PropTypes.func,\n  submitting: React.PropTypes.bool,\n  type: React.PropTypes.string,\n};\n\n\nexport function getInputProps(props) {\n  return {\n    id: props.id,\n    name: props.name,\n    onBlur: props.onBlur,\n    onChange: props.onChange,\n    onFocus: props.onFocus,\n    readOnly: props.readOnly,\n    required: props.required,\n    type: props.type,\n    value: props.value,\n\n    max: props.min,\n    min: props.max,\n    step: props.step,\n  };\n}\n",
    "static": true,
    "longname": "src/components/forms/props.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "inputPropTypes",
    "memberof": "src/components/forms/props.js",
    "static": true,
    "longname": "src/components/forms/props.js~inputPropTypes",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/props",
    "importStyle": "{inputPropTypes}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"errors\": *, \"warning\": *, \"sanitizers\": *, \"formatters\": *, \"messages\": *, \"validationState\": *, \"id\": *, \"name\": *, \"onBlur\": *, \"onChange\": *, \"onFocus\": *, \"readOnly\": *, \"required\": *, \"type\": *, \"value\": *, \"disabled\": *, \"maxLength\": *, \"placeholder\": *}"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "reduxFormPropTypes",
    "memberof": "src/components/forms/props.js",
    "static": true,
    "longname": "src/components/forms/props.js~reduxFormPropTypes",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/props",
    "importStyle": "{reduxFormPropTypes}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"error\": *, \"handleSubmit\": *, \"input\": *, \"label\": *, \"meta\": *, \"pristine\": *, \"reset\": *, \"submitting\": *, \"type\": *}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "getInputProps",
    "memberof": "src/components/forms/props.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/props.js~getInputProps",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/props",
    "importStyle": "{getInputProps}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"id\": *, \"name\": *, \"onBlur\": *, \"onChange\": *, \"onFocus\": *, \"readOnly\": *, \"required\": *, \"type\": *, \"value\": *, \"max\": *, \"min\": *, \"step\": *}"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/components/forms/validators.js",
    "content": "/**\n * Check if the provided values is smaller than the `min` prop.\n *\n * @param      {string}  value     The value to validate\n * @param      {object}  ownProps  The component's own properties\n * @return     {string|null}  Either an error message, or `null`\n */\nexport const min = function min(value, ownProps) {\n  if (ownProps.min !== undefined && parseFloat(value) < ownProps.min) {\n    return `Value can't be less than ${ownProps.min}.`;\n  }\n  return null;\n};\n\n/**\n * Check if the provided values is greater than the `max` prop.\n *\n * @param      {string}  value     The value to validate\n * @param      {object}  ownProps  The component's own properties\n * @return     {string|null}  Either an error message, or `null`\n */\nexport const max = function max(value, ownProps) {\n  if (ownProps.max !== undefined && parseFloat(value) > ownProps.max) {\n    return `Value can't be greater than ${ownProps.max}.`;\n  }\n  return null;\n};\n",
    "static": true,
    "longname": "src/components/forms/validators.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "min",
    "memberof": "src/components/forms/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/validators.js~min",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/validators",
    "importStyle": "{min}",
    "description": "Check if the provided values is smaller than the `min` prop.",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "The component's own properties"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "Either an error message, or `null`"
    }
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "max",
    "memberof": "src/components/forms/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/forms/validators.js~max",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/components/forms/validators",
    "importStyle": "{max}",
    "description": "Check if the provided values is greater than the `max` prop.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "The component's own properties"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "Either an error message, or `null`"
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/components/index.js",
    "content": "/**\n * A React Component.\n * @typedef {object} ReactElement\n */\nimport forms from './forms';\nimport RPCCaller from './RPCCaller.react';\nimport TopicPublisher from './TopicPublisher.react';\nimport TopicSubscriber from './TopicSubscriber.react';\nimport Progress from './Progress.react';\n\n/**\n * @namespace components\n * @memberof Simpl\n */\nexport default {\n  forms,\n  RPCCaller,\n  TopicPublisher,\n  TopicSubscriber,\n  Progress,\n};\n",
    "static": true,
    "longname": "src/components/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "typedef",
    "name": "ReactElement",
    "memberof": "src/components/index.js",
    "static": true,
    "longname": "src/components/index.js~ReactElement",
    "access": null,
    "description": "A React Component.",
    "lineNumber": 5,
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "ReactElement"
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/constants.js",
    "content": "/**\n * A constant describing all the possible connection status.\n *\n * @readonly\n * @property {string} CONNECTING='connecting' The initial value. The app is not connected to\n * the WAMP Router, yet.\n * @property {string} CONNECTED='connected' The app is connected and authenticated, but it\n * still needs to download data.\n * @property {string} LOADED='loaded' The app has downloaded all the relevant data.\n * @property {string} OFFLINE='offline' The connection was dropped.\n */\nexport const CONNECTION_STATUS = {\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  LOADED: 'loaded',\n  OFFLINE: 'offline',\n};\n",
    "static": true,
    "longname": "src/constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "CONNECTION_STATUS",
    "memberof": "src/constants.js",
    "static": true,
    "longname": "src/constants.js~CONNECTION_STATUS",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/constants",
    "importStyle": "{CONNECTION_STATUS}",
    "description": "A constant describing all the possible connection status.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'connecting'",
        "defaultRaw": "'connecting'",
        "name": "CONNECTING",
        "description": "The initial value. The app is not connected to\nthe WAMP Router, yet."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'connected'",
        "defaultRaw": "'connected'",
        "name": "CONNECTED",
        "description": "The app is connected and authenticated, but it\nstill needs to download data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'loaded'",
        "defaultRaw": "'loaded'",
        "name": "LOADED",
        "description": "The app has downloaded all the relevant data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'offline'",
        "defaultRaw": "'offline'",
        "name": "OFFLINE",
        "description": "The connection was dropped."
      }
    ],
    "type": {
      "types": [
        "{\"CONNECTING\": string, \"CONNECTED\": string, \"LOADED\": string, \"OFFLINE\": string}"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/decorators/forms/index.js",
    "content": "import validates from './validates';\n\n/**\n * @namespace forms\n * @memberof Simpl.decorators\n */\nexport default {\n  validates,\n};\n",
    "static": true,
    "longname": "src/decorators/forms/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/decorators/forms/validates.js",
    "content": "/* eslint \"no-underscore-dangle\": \"off\" */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { stopSubmit } from 'redux-form';\n\nimport _ from 'lodash';\nimport validator from 'validator';\n\n\nconst verboseValidator = function verboseValidator(validation, value) {\n  if (!value) {\n    return null;\n  }\n  const messages = {\n    isEmail: `The specified value \"${value}\" is not a valid email address.`,\n    isNumeric: 'The specified value is not an integer.',\n    isDecimal: 'The specified value is not a decimal.',\n    isLowercase: 'The specified value must be lowercase',\n    isUppercase: 'The specified value must be uppercase',\n  };\n\n  return validator[validation](value) ? null : messages[validation] || 'Invalid value';\n};\n\n/**\n * Convert a value to a string, if possible. Otherwise returns the unchanged\n * value. `null` and `undefined` are coerced to the empty string.\n *\n * @param      {any}   value   The value to coerced\n * @return     {any}  Either the value converted to a string, or the value itself.\n */\nconst stringValue = function stringValue(value) {\n  if (value === null || value === undefined) return '';\n  return value.toString !== undefined ? value.toString() : value;\n};\n\n/**\n * Options to validate a component\n * @typedef {Object} ValidationOptions\n * @property      {Array<string, function>}   errors  An array of validators\n * that may return an error message. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package\n * @property      {Array<string, function>}   warnings   An array of validators\n * that may return a warning message. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package\n * @property      {Array<string, function>}   sanitizers  An array of saniters\n * to modify the field's returned value. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package\n * @property      {Array<function>}           formatters  An array of saniters\n * to modify the field's rendered value.\n */\n\n/**\n * Add value validation to a single field.\n * @memberof Simpl.decorators.forms\n * @example\n * import React from 'react';\n *\n * import {validates} from 'simpl/lib/decorators/forms/validates';\n * import {FormControl} from 'react-bootstrap';\n *\n * const noSpam = (value, ownProps) => {\n *     // validation logic goes here\n *     if (value.endsWith('@spam.com')) {\n *         return \"that's spam\"\n *     }\n * };\n *\n * const itsNew = (value, ownProps) => {\n *     if (value === ownProps.previousEmail) {\n *         return \"email didn't change\"\n *     }\n * };\n *\n * function EmailField(props) {\n *     // all aestethics goes here\n *     return (\n *         <FormControl\n *             type=\"email\"\n *             {...props}\n *         />\n *     )\n * }\n *\n * const ValidatingEmailField = validateField({\n *     errors: ['isEmail', noSpam],\n *     warnings: [itsNew]\n * )(EmailField);\n *\n * class MyComponent extends React.Component {\n *     render() {\n *         return(\n *             <div>\n *                 <ValidatingEmailField\n *                     previousEmail=\"my@email.com\"\n *                     errors={['isRequired']}\n *                 />\n *             </div>\n *         );\n *     }\n * }\n *\n * @param      {ValidationOptions}  options  An object of options\n * @returns    {ReactElement} A React component.\n */\nexport function validateField({ errors, warnings, sanitizers, formatters }) {\n  const errorValidators = errors || [];\n  const warningValidators = warnings || [];\n  const optionsSanitizers = sanitizers || [];\n  const optionsFormatters = formatters || [];\n\n  return (Component) => {\n    const parentProps = Component.defaultProps;\n\n    class ValidatedComponent extends React.Component {\n      constructor(props, context) {\n        super(props, context);\n\n        let formattedValue = '';\n        if (![undefined, null, ''].includes(this.props.initialValue)) {\n          formattedValue = this.format(this.props.initialValue, this.mergedProps(this.props));\n        }\n        this.state = {\n          messages: this.props.messages || [],\n          validationState: null,\n          value: formattedValue,\n          hasReduxForm: context._reduxForm !== undefined,\n          name: this.props.name || this.props.input.name,\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n      }\n\n      componentWillReceiveProps(props) {\n        // add value and errors/warnings coming from redux-form\n\n        if (_.isEqual(this.props, props)) {\n          return;\n        }\n\n        const newState = {\n          validationState: null,\n          messages: [],\n        };\n\n        if (props.meta) {\n          if (props.meta.error) {\n            newState.validationState = 'error';\n            newState.messages.push(props.meta.error);\n          } else if (props.meta.warning) {\n            newState.validationState = 'warning';\n            newState.messages.push(props.meta.warning);\n          }\n        }\n\n        this.setState(newState);\n      }\n\n      onChange(e) {\n        this.setState({\n          value: e.target.value,\n        });\n\n        if (this.state.hasReduxForm) {\n        // Update the redux-form state is the field is decorated with `reduxForm'=\n          this.context._reduxForm.dispatch(\n            this.context._reduxForm.change(this.state.name, e.target.value)\n          );\n        }\n\n        if (this.props.onChange) {\n          this.props.onChange(e);\n        }\n      }\n\n      onFocus(e) {\n        this.setState({\n          validationState: null,\n          messages: [],\n        });\n\n        if (this.props.focus) {\n          this.props.focus(e);\n        }\n      }\n\n      onBlur(e) {\n        if (this.props.readOnly === true) {\n          if (this.props.blur) {\n            this.props.blur(e);\n          }\n          return;\n        }\n\n        const originalValue = e.target.value;\n\n        const { validationState, allErrors, allWarnings } = this.validate(originalValue);\n\n        const messages = [...allErrors, ...allWarnings];\n\n        const sanitizedValue = this.sanitize(originalValue, this.props);\n        const formattedValue = this.format(originalValue, this.mergedProps(this.props));\n\n        // If part of a redux form and there are errors, dispatch actions to\n        // mark the form as invalid. Warnings will still allow the form to be\n        // submitted.\n        if (this.state.hasReduxForm) {\n          const formName = this.context._reduxForm.form;\n          const reduxFormErrors = { ...this.props.form[formName].submitErrors };\n          if (sanitizedValue === null || allErrors.length > 0) {\n            reduxFormErrors[this.state.name] = allErrors.join(', ');\n          } else {\n            delete reduxFormErrors[this.state.name];\n          }\n          this.props.stopSubmit(formName, reduxFormErrors);\n          this.context._reduxForm.dispatch(\n            this.context._reduxForm.blur(this.state.name, e.target.value)\n          );\n        }\n\n        if (formattedValue !== null) {\n          this.setState({\n            value: formattedValue,\n            validationState,\n            messages,\n          });\n        }\n\n        // the entered value is invalid\n        if (sanitizedValue === null) {\n          return;\n        }\n\n        if (this.props.blur) {\n          const sanitizedTarget = Object.assign({}, e.target, { value: sanitizedValue });\n          const sanitizedEvent = Object.assign({}, e, { target: sanitizedTarget });\n          this.props.blur(sanitizedEvent, formattedValue);\n        }\n      }\n\n      validate(originalValue) {\n        const allErrors = this.mapValidators(\n          [...this.props.errors, ...errorValidators], originalValue, this.props\n        );\n        const allWarnings = this.mapValidators(\n          [...this.props.warnings, ...warningValidators], originalValue, this.props\n        );\n\n        if (originalValue === '' && this.props.required === true) {\n          allErrors.push('This field is required.');\n        }\n\n        let validationState = 'success';\n        if (allErrors.length) {\n          validationState = 'error';\n        } else if (allWarnings.length) {\n          validationState = 'warning';\n        }\n\n        return {\n          validationState,\n          allErrors,\n          allWarnings,\n        };\n      }\n\n      mergedProps(props) {\n        return Object.assign({}, parentProps, props);\n      }\n\n      mapValidators(validators, value, props) {\n        return validators.map((validation) => {\n          if (_.isFunction(validation)) {\n            return validation(value, props);\n          } else if (_.isString(validation)) {\n            return verboseValidator(\n              validation,\n              stringValue(value)\n            );\n          }\n          return null;\n        }).filter((result) => result !== null);\n      }\n\n      sanitize(value, props) {\n        const allSanitizers = [...props.sanitizers, ...optionsSanitizers];\n\n        // `redux-form` commpatibility\n        if (props.normalize) {\n          allSanitizers.push(props.normalize);\n        }\n\n        const sanitizedValue = allSanitizers.reduce((previousValue, sanitizer) => {\n          let sanitizerFunc = sanitizer;\n          if (_.isString(sanitizer)) {\n            sanitizerFunc = validator[sanitizer];\n          }\n\n          const sanitized = sanitizerFunc(stringValue(previousValue));\n          if (props.input.type === 'number' && isNaN(sanitized)) {\n            return null;\n          }\n          return sanitized !== null ? sanitized : previousValue;\n        }, value);\n        return sanitizedValue;\n      }\n\n      format(value, props) {\n        const allFormatters = [...props.formatters, ...optionsFormatters];\n        const formattedValue = allFormatters.reduce(\n          (previousValue, formatter) => formatter(previousValue, props) || previousValue\n        , value);\n        return formattedValue;\n      }\n\n      render() {\n        return (\n          <span>\n            <Component\n              {...this.state}\n              onChange={this.onChange}\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n              type={this.props.type}\n              name={this.state.name}\n              id={this.props.id}\n              required={this.props.required}\n              readOnly={this.props.readOnly}\n            />\n          </span>\n        );\n      }\n    }\n\n    ValidatedComponent.defaultProps = {\n      errors: [],\n      warnings: [],\n      sanitizers: [],\n      formatters: [],\n      required: false,\n      readOnly: false,\n    };\n\n    ValidatedComponent.contextTypes = {\n      _reduxForm: React.PropTypes.object,\n    };\n\n    ValidatedComponent.propTypes = {\n      name: React.PropTypes.string,\n      input: React.PropTypes.object,\n      id: React.PropTypes.string,\n      required: React.PropTypes.bool,\n      readOnly: React.PropTypes.bool,\n      initialValue: React.PropTypes.any,\n      type: React.PropTypes.string,\n      meta: React.PropTypes.object,\n      onChange: React.PropTypes.func,\n      onBlur: React.PropTypes.func,\n      blur: React.PropTypes.func,\n      onFocus: React.PropTypes.func,\n      messages: React.PropTypes.array,\n      errors: React.PropTypes.array,\n      warnings: React.PropTypes.array,\n      sanitizers: React.PropTypes.array,\n      formatters: React.PropTypes.arrayOf(React.PropTypes.func),\n    };\n\n    const mapStateToProps = (state, ownProps) => ({\n      form: state.form,\n    });\n    const mapDispatchToProps = {\n      stopSubmit,\n    };\n    return connect(mapStateToProps, mapDispatchToProps)(ValidatedComponent);\n  };\n}\n\nexport default validateField;\n",
    "static": true,
    "longname": "src/decorators/forms/validates.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "verboseValidator",
    "memberof": "src/decorators/forms/validates.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/forms/validates.js~verboseValidator",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/decorators/forms/validates",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "validation",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "stringValue",
    "memberof": "src/decorators/forms/validates.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/forms/validates.js~stringValue",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/decorators/forms/validates",
    "importStyle": null,
    "description": "Convert a value to a string, if possible. Otherwise returns the unchanged\nvalue. `null` and `undefined` are coerced to the empty string.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to coerced"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "Either the value converted to a string, or the value itself."
    }
  },
  {
    "__docId__": 86,
    "kind": "typedef",
    "name": "ValidationOptions",
    "memberof": "src/decorators/forms/validates.js",
    "static": true,
    "longname": "src/decorators/forms/validates.js~ValidationOptions",
    "access": null,
    "description": "Options to validate a component",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<string, function>"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": "An array of validators\nthat may return an error message. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package"
      },
      {
        "nullable": null,
        "types": [
          "Array<string, function>"
        ],
        "spread": false,
        "optional": false,
        "name": "warnings",
        "description": "An array of validators\nthat may return a warning message. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package"
      },
      {
        "nullable": null,
        "types": [
          "Array<string, function>"
        ],
        "spread": false,
        "optional": false,
        "name": "sanitizers",
        "description": "An array of saniters\nto modify the field's returned value. For available strings, see the npm [validator](https://www.npmjs.com/package/validator) package"
      },
      {
        "nullable": null,
        "types": [
          "Array<function>"
        ],
        "spread": false,
        "optional": false,
        "name": "formatters",
        "description": "An array of saniters\nto modify the field's rendered value."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ValidationOptions"
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "validateField",
    "memberof": "src/decorators/forms/validates.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/forms/validates.js~validateField",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/forms/validates",
    "importStyle": "{validateField}",
    "description": "Add value validation to a single field.",
    "examples": [
      "import React from 'react';\n\nimport {validates} from 'simpl/lib/decorators/forms/validates';\nimport {FormControl} from 'react-bootstrap';\n\nconst noSpam = (value, ownProps) => {\n    // validation logic goes here\n    if (value.endsWith('@spam.com')) {\n        return \"that's spam\"\n    }\n};\n\nconst itsNew = (value, ownProps) => {\n    if (value === ownProps.previousEmail) {\n        return \"email didn't change\"\n    }\n};\n\nfunction EmailField(props) {\n    // all aestethics goes here\n    return (\n        <FormControl\n            type=\"email\"\n            {...props}\n        />\n    )\n}\n\nconst ValidatingEmailField = validateField({\n    errors: ['isEmail', noSpam],\n    warnings: [itsNew]\n)(EmailField);\n\nclass MyComponent extends React.Component {\n    render() {\n        return(\n            <div>\n                <ValidatingEmailField\n                    previousEmail=\"my@email.com\"\n                    errors={['isRequired']}\n                />\n            </div>\n        );\n    }\n}"
    ],
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "   {ReactElement} A React component."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ValidationOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "An object of options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ReactElement"
      ],
      "spread": false,
      "description": "A React component."
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/decorators/index.js",
    "content": "import forms from './forms';\nimport pubsub from './pubsub';\nimport rpc from './rpc';\nimport simpl from './simpl';\nimport wamp from './wamp';\n\n\n/**\n * @namespace decorators\n * @memberof Simpl\n */\nexport default {\n  forms,\n  pubsub,\n  rpc,\n  simpl,\n  wamp,\n};\n",
    "static": true,
    "longname": "src/decorators/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/decorators/pubsub/index.js",
    "content": "import publishes from './publishes';\nimport subscribes from './subscribes';\n\n\n/**\n * @namespace pubsub\n * @memberof Simpl.decorators\n */\nexport default {\n  publishes,\n  subscribes,\n};\n",
    "static": true,
    "longname": "src/decorators/pubsub/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "src/decorators/pubsub/publishes.js",
    "content": "import React from 'react';\n\nimport _ from 'lodash';\nimport AutobahnReact from '../../autobahn';\n\n\n/**\n * @function publishes\n * @memberof Simpl.decorators.pubsub\n */\nexport function publishes(topic, options = {}) {\n  return (Component) => {\n    const defaults = { acknowledge: true, disclose_me: true, exclude_me: false };\n    const optionsWithDefaults = Object.assign(defaults, {}, options);\n\n\n    class Publisher extends React.Component {\n      constructor(props) {\n        super(props);\n        this.publish = this.publish.bind(this);\n      }\n      publish(payload) {\n        const args = payload.args || [];\n        const kwargs = payload.kwargs || {};\n        let resolvedTopic = topic;\n\n        if (_.isFunction(topic)) {\n          resolvedTopic = topic.bind(this)(this.props);\n        }\n        return AutobahnReact.publish(resolvedTopic, args, kwargs, optionsWithDefaults)\n        .then(publication => {\n          if (this.props.onPublished) {\n            return this.props.onPublished(\n              resolvedTopic, args, kwargs, optionsWithDefaults, publication\n            );\n          }\n          return publication;\n        })\n        .catch(error => {\n          if (this.props.onPublishedError) {\n            return this.props.onPublishedError(\n              resolvedTopic, args, kwargs, optionsWithDefaults, error\n            );\n          }\n          return error;\n        });\n      }\n      render() {\n        return <Component {...this.props} {...this.state} publish={this.publish} />;\n      }\n    }\n\n    Publisher.propTypes = {\n      onPublished: React.PropTypes.func,\n      onPublishedError: React.PropTypes.func,\n    };\n\n    return Publisher;\n  };\n}\n\nexport default publishes;\n",
    "static": true,
    "longname": "src/decorators/pubsub/publishes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "publishes",
    "memberof": "src/decorators/pubsub/publishes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/pubsub/publishes.js~publishes",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/pubsub/publishes",
    "importStyle": "{publishes}",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "publishes"
      }
    ],
    "params": [
      {
        "name": "topic",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/decorators/pubsub/subscribes.js",
    "content": "import React from 'react';\n\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport AutobahnReact from '../../autobahn';\n\n\n/**\n * @function subscribes\n * @memberof Simpl.decorators.pubsub\n */\nexport function subscribes(topics, options = {}, staticMethods = {}) {\n  return (Component) => {\n    const defaults = { match: 'prefix' };\n    const optionsWithDefaults = Object.assign(defaults, {}, options);\n\n    const mapDispatchToProps = (dispatch, ownProps) => ({\n      onMessage(args, kwargs, event) {\n        const store = ownProps.append === undefined ? true : ownProps.append;\n        const action = store ? this.appendMessage : this.updateMessage;\n\n        action({ args, kwargs, event });\n        if (ownProps.onReceived !== undefined) {\n          ownProps.onReceived(args, kwargs, event);\n        }\n      },\n    });\n\n    class SubscriptionContainer extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          data: [],\n        };\n        this.appendMessage = this.appendMessage.bind(this);\n        this.updateMessage = this.updateMessage.bind(this);\n      }\n      componentDidMount() {\n        this.subscriptions = [];\n        // eslint-disable-next-line no-unused-vars\n        AutobahnReact.Connection.onReady(([session, details]) => {\n          this.subscribeTo(session);\n        });\n        this.subscribeTo(AutobahnReact);\n      }\n      shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n      }\n      componentWillUnmount() {\n        const resolvedTopics = this.getTopics();\n        console.log(`Unmounting ${resolvedTopics}`);\n        this.unsubscribe();\n      }\n      getTopics() {\n        let resolvedTopics;\n        if (!_.isArray(topics)) {\n          resolvedTopics = [topics];\n        } else {\n          resolvedTopics = [...topics];\n        }\n        return resolvedTopics.map((topic) => {\n          if (_.isFunction(topic)) {\n            return topic.bind(this)(this.props);\n          }\n          return topic;\n        });\n      }\n      subscribeTo(session) {\n        const handler = this.props.onMessage.bind(this);\n        const resolvedTopics = this.getTopics();\n\n        resolvedTopics.forEach((topic) => {\n          session.subscribe(topic, handler, optionsWithDefaults)\n          .then(subscription => {\n            this.subscriptions.push(subscription);\n            console.log(`Subscribed to ${topic}`);\n          })\n          .catch(error => {\n            console.error(`Failed to auto-subscribe to a topic: ${topic}!`, error);\n          });\n        });\n      }\n      unsubscribe() {\n        this.subscriptions.forEach(subscription => {\n          console.log(`Unsubscribing from '${subscription.topic}'`);\n          AutobahnReact.unsubscribe(subscription);\n        });\n      }\n      appendMessage(message) {\n        const newVar = [...this.state.data || [], message];\n\n        this.setState({\n          data: newVar,\n        });\n      }\n      updateMessage(message) {\n        this.setState({\n          data: message,\n        });\n      }\n      render() {\n        return <Component {...this.props} {...this.state} />;\n      }\n    }\n\n    SubscriptionContainer.propTypes = {\n      append: React.PropTypes.bool,\n      options: React.PropTypes.object,\n      onMessage: React.PropTypes.func,\n    };\n\n    for (var functionName in staticMethods) {\n      SubscriptionContainer[functionName] = staticMethods[functionName];\n    }\n\n    return connect(null, mapDispatchToProps)(SubscriptionContainer);\n  };\n}\n\nexport default subscribes;\n",
    "static": true,
    "longname": "src/decorators/pubsub/subscribes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "subscribes",
    "memberof": "src/decorators/pubsub/subscribes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/pubsub/subscribes.js~subscribes",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/pubsub/subscribes",
    "importStyle": "{subscribes}",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "subscribes"
      }
    ],
    "params": [
      {
        "name": "topics",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "staticMethods",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/decorators/rpc/calls.js",
    "content": "import React from 'react';\n\nimport AutobahnReact from '../../autobahn';\n\n\n/**\n * @function\n * @memberof Simpl.decorators.rpc\n */\nexport function calls(procedure, options = {}) {\n  return (Component) => {\n    const defaults = {};\n    const optionsWithDefaults = Object.assign(defaults, {}, options);\n\n    class Caller extends React.Component {\n      constructor(props) {\n        super(props);\n        this.call = this.call.bind(this);\n      }\n      call(payload) {\n        const args = payload.args || [];\n        const kwargs = payload.kwargs || {};\n        return AutobahnReact.call(procedure, args, kwargs, optionsWithDefaults);\n      }\n      render() {\n        return <Component {...this.props} {...this.state} call={this.call} />;\n      }\n    }\n\n    return Caller;\n  };\n}\n\nexport default calls;\n",
    "static": true,
    "longname": "src/decorators/rpc/calls.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "calls",
    "memberof": "src/decorators/rpc/calls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/rpc/calls.js~calls",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/rpc/calls",
    "importStyle": "{calls}",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "procedure",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/decorators/rpc/index.js",
    "content": "import calls from './calls';\nimport registers from './registers';\n\n\n/**\n * @namespace rpc\n * @memberof Simpl.decorators\n */\nexport default {\n  calls,\n  registers,\n};\n",
    "static": true,
    "longname": "src/decorators/rpc/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/decorators/rpc/registers.js",
    "content": "import React from 'react';\n\nimport AutobahnReact from '../../autobahn';\n\n\n/**\n * @function\n * @memberof Simpl.decorators.rpc\n */\nexport function registers(Component, procedure, options = {}) {\n  return (Component) => {\n    const defaults = { match: 'prefix' };\n    const optionsWithDefaults = Object.assign(defaults, {}, options);\n\n\n    class Listener extends React.Component {\n      componentDidMount() {\n        this.registrations = [];\n\n        // eslint-disable-next-line no-unused-vars\n        AutobahnReact.Connection.onReady(([session, details]) => {\n          this.register(session);\n        });\n        // eslint-disable-next-line no-unused-vars\n        AutobahnReact.Connection.onLost(([session, details]) => {\n          this.register(AutobahnReact);\n        });\n      }\n      componentWillUnmount() {\n        this.unregister();\n      }\n      register(session) {\n        const handler = this.props.onCalled.bind(this);\n        session.register(procedure, handler, optionsWithDefaults).then((registration) => {\n          this.registrations.push(registration);\n          console.log(\"registered procedure \" + procedure);\n        });\n      }\n      unregister() {\n        this.registrations.forEach(registration => {\n          AutobahnReact.unregister(registration);\n        });\n      }\n      render() {\n        return <Component {...this.props} {...this.state} />;\n      }\n    }\n\n    Listener.propTypes = {\n      append: React.PropTypes.bool,\n      options: React.PropTypes.object,\n      onCalled: React.PropTypes.func,\n    };\n\n    return Listener;\n  };\n}\n\n\nexport default registers;\n",
    "static": true,
    "longname": "src/decorators/rpc/registers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "registers",
    "memberof": "src/decorators/rpc/registers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/rpc/registers.js~registers",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/rpc/registers",
    "importStyle": "{registers}",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "Component",
        "types": [
          "*"
        ]
      },
      {
        "name": "procedure",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/decorators/simpl.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { stopSubmit } from 'redux-form';\n\nimport _ from 'lodash';\n\nimport AutobahnReact from '../autobahn';\n\nimport {\n  addChild, connectedScope, disconnectedScope, getDataTree, getRunUsers,\n  removeChild, updateScope, getCurrentRunPhase, getPhases, getRoles, getRunUserInfo,\n  // eslint-disable-next-line comma-dangle\n  getRunUserScenarios, showGenericError, setConnectionStatus\n} from '../actions/simpl';\nimport { CONNECTION_STATUS } from '../constants';\n\nimport { subscribes } from './pubsub/subscribes';\nimport { wampOptionsWithDefaults, wampSetup } from './utils';\n\n\n/**\n * Decorator to wrap your main app\n * @example\n * export default simpl({\n *   authid: 123,\n *   password: 'password',\n *   url: 'ws://example.com/ws',\n *   progressComponent: MyProgressComponent,\n *   topics: () => ['topic1', 'topic2'],\n *   root_topic: 'org.example.namespace',\n *   prefixes: {\n *     special: 'org.example.namespace.special.shortcut'\n *   }\n * })(MyComponent);\n\n * @function\n * @memberof Simpl.decorators\n * @param {Object} options - An object of options.\n * @param {string} options.authid - The user id for authenticating on the WAMP\n * Router. This will the user's id on Simpl-Games-Api\n * @param {string} options.password - The password for authenticating on the\n * WAMP Router.\n * @param {string} options.url - The URL of the WAMP router.\n * @param {function} [options.progressComponent] - A customized Component to\n * show the App's connection state. The component will receive a\n * `connectionStatus` prop which can have one of the following values:\n * * `connecting`: The initial value. The app is not connected to the WAMP Router, yet.\n * * `connected`: The app is connected and authenticated, but it still needs to download data.\n * * `loaded`: The app has downloaded all the relevant data.\n * * `offline`:  The connection was dropped.\n * @param {function} options.topics - A function returning a list of topics to\n * subscribe to.\n * @param {string} options.root_topic - The root topic for your model. This will\n * be used for the `'model'` prefix.\n * @param {Object} [options.prefixes] - An object mapping names to topic\n * prefixes, to be used as shortcuts.\n */\nexport function simpl(options) {\n  return (Component) => {\n    const optionsWithDefaults = wampOptionsWithDefaults(options);\n    if (_.isFunction(options.topics)) {\n      optionsWithDefaults.topics = options.topics();\n    }\n\n    const mapStateToProps = (state) => ({\n      connectionStatus: state.simpl.connectionStatus,\n      errors: state.errors,\n      progressComponent: optionsWithDefaults.progressComponent,\n    });\n\n    const mapDispatchToProps = (dispatch) => ({\n      setConnectionStatus(status) {\n        dispatch(setConnectionStatus(status));\n      },\n      onReady() {\n        if (optionsWithDefaults.topics) {\n\n          const authid = parseInt(options.authid, 10);\n          optionsWithDefaults.topics.forEach((topic) => {\n            dispatch(connectedScope(topic));\n            dispatch(\n              getRunUsers(topic)\n            ).then((action) => {\n              const runUsers = action.payload;\n              runUsers.forEach((ru) => {\n                if (ru.data.user === authid) {  // TODO if leader, also get player scenarios\n                  dispatch(getRunUserScenarios(`model:model.runuser.${ru.data.id}`));\n                }\n              });\n            }).then(() => {\n              dispatch(getRunUserInfo(authid));\n            });\n            dispatch(getCurrentRunPhase(topic));\n            dispatch(getDataTree(topic));\n          });\n        }\n        dispatch(getPhases('model:model.game'));\n        dispatch(getRoles('model:model.game'));\n        return Promise.resolve();\n      },\n      onLeave() {\n        if (optionsWithDefaults.topics) {\n          optionsWithDefaults.topics.forEach((topic) => {\n            dispatch(disconnectedScope(topic));\n          });\n        }\n        return Promise.resolve();\n      },\n      onReceived(args, kwargs, event) {\n        if (kwargs.error) {\n          if (kwargs.error === 'application.error.validation_error') {\n            const [form, errors] = args;\n            dispatch(stopSubmit(form, errors));\n          } else {\n            dispatch(showGenericError(args, kwargs));\n          }\n        } else {\n          const [pk, resourceName, data] = args;\n          const resolvedTopics = optionsWithDefaults.topics.map(\n            (topic) => AutobahnReact.Connection.currentConnection.session.resolve(topic)\n          );\n          resolvedTopics.forEach((topic) => {\n            const actions = {\n              [`${topic}.add_child`]: addChild,\n              [`${topic}.remove_child`]: removeChild,\n              [`${topic}.update_child`]: updateScope,\n            };\n            if (actions[event.topic]) {\n              dispatch(actions[event.topic]({ resource_name: resourceName, data, pk }));\n            }\n          });\n        }\n      },\n    });\n\n\n    class AppContainer extends React.Component {\n\n      shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.connectionStatus === CONNECTION_STATUS.LOADED) {\n          return false;\n        }\n        return this.props !== nextProps || this.state !== nextState;\n      }\n      render() {\n        return <Component {...this.props} {...this.state} />;\n      }\n    }\n\n    AppContainer.propTypes = {\n      connectionStatus: React.PropTypes.string.isRequired,\n    };\n\n\n    const appTopics = optionsWithDefaults.topics.reduce(\n      (memo, topic) => memo.concat([\n        `${topic}.add_child`,\n        `${topic}.update_child`,\n        `${topic}.remove_child`,\n      ])\n    , [\n      `model:error.${options.authid}`,\n    ]);\n    const SubscribedAppContainer = subscribes(appTopics)(AppContainer);\n\n    // eslint-disable-next-line react/no-multi-comp\n    class Simpl extends React.Component {\n      componentWillMount() {\n        wampSetup(this, optionsWithDefaults);\n        window.addEventListener('beforeunload', this.props.onLeave);\n      }\n      componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.props.onLeave);\n      }\n      render() {\n        if (this.props.connectionStatus !== CONNECTION_STATUS.LOADED) {\n          return (\n            <div className={`simpl simpl-${this.props.connectionStatus}`}>\n              <this.props.progressComponent {...this.props} {...this.state} />\n            </div>\n            );\n        }\n        return (\n          <div className={`simpl simpl-${this.props.connectionStatus}`}>\n            <SubscribedAppContainer {...this.props} {...this.state} />\n          </div>\n        );\n      }\n    }\n\n    Simpl.propTypes = {\n      connectionStatus: React.PropTypes.string.isRequired,\n      onLeave: React.PropTypes.func,\n      onReady: React.PropTypes.func.isRequired,\n      progressComponent: React.PropTypes.func.isRequired,\n      setConnectionStatus: React.PropTypes.func.isRequired,\n    };\n\n    const SimplContainer = connect(mapStateToProps, mapDispatchToProps)(Simpl);\n\n    return SimplContainer;\n  };\n}\n\n/**\n * @namespace simpl\n * @memberof Simpl.decorators\n */\nexport default simpl;\n",
    "static": true,
    "longname": "src/decorators/simpl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "simpl",
    "memberof": "src/decorators/simpl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/simpl.js~simpl",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/simpl",
    "importStyle": "{simpl}",
    "description": "Decorator to wrap your main app",
    "examples": [
      "export default simpl({\n  authid: 123,\n  password: 'password',\n  url: 'ws://example.com/ws',\n  progressComponent: MyProgressComponent,\n  topics: () => ['topic1', 'topic2'],\n  root_topic: 'org.example.namespace',\n  prefixes: {\n    special: 'org.example.namespace.special.shortcut'\n  }\n})(MyComponent);"
    ],
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "An object of options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.authid",
        "description": "The user id for authenticating on the WAMP\nRouter. This will the user's id on Simpl-Games-Api"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.password",
        "description": "The password for authenticating on the\nWAMP Router."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "The URL of the WAMP router."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.progressComponent",
        "description": "A customized Component to\nshow the App's connection state. The component will receive a\n`connectionStatus` prop which can have one of the following values:\n* `connecting`: The initial value. The app is not connected to the WAMP Router, yet.\n* `connected`: The app is connected and authenticated, but it still needs to download data.\n* `loaded`: The app has downloaded all the relevant data.\n* `offline`:  The connection was dropped."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.topics",
        "description": "A function returning a list of topics to\nsubscribe to."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.root_topic",
        "description": "The root topic for your model. This will\nbe used for the `'model'` prefix."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.prefixes",
        "description": "An object mapping names to topic\nprefixes, to be used as shortcuts."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/decorators/utils.js",
    "content": "import AutobahnReact from '../autobahn';\nimport Progress from '../components/Progress.react';\n\nimport { CONNECTION_STATUS } from '../constants';\n\n\nexport function wampSetup(component, options) {\n  // Callback called whenever the connection is lost\n  AutobahnReact.Connection.onLost(() => {\n    console.log('Connection lost :/!');\n    component.props.setConnectionStatus(CONNECTION_STATUS.OFFLINE);\n  });\n  // Callback called whenever the connection is ready\n// eslint-disable-next-line no-unused-vars\n  AutobahnReact.Connection.onReady(([session, details]) => {\n    console.log('Connection established!');\n    session.prefix('model', options.root_topic)\n    Object.keys(options.prefixes).forEach((key) => {\n      const value = options.prefixes[key];\n      console.log('added prefix: ', key, value);\n      session.prefix(key, value);\n      component.props.setConnectionStatus(CONNECTION_STATUS.CONNECTED);\n    });\n  });\n  AutobahnReact.Connection.initialize(options.url, options.realm);\n  if (options.authid) {\n    AutobahnReact.Auth.logIn({\n      username: `${options.authid}`,\n      password: options.password,\n    }).then(() => {\n      console.log('authd');\n      if (component.props.onReady) {\n        component.props.onReady();\n      }\n    }).catch((err) => {\n      console.log(err);\n      console.log('not authd');\n    });\n  }\n}\n\nexport function wampOptionsWithDefaults(options) {\n  const defaults = {\n    url: 'ws://localhost:8080/ws',\n    realm: 'realm1',\n    prefixes: {},\n    progressComponent: Progress,\n  };\n  return Object.assign({}, defaults, options);\n}\n",
    "static": true,
    "longname": "src/decorators/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "wampSetup",
    "memberof": "src/decorators/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/utils.js~wampSetup",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/utils",
    "importStyle": "{wampSetup}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "component",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "wampOptionsWithDefaults",
    "memberof": "src/decorators/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/utils.js~wampOptionsWithDefaults",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/utils",
    "importStyle": "{wampOptionsWithDefaults}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/decorators/wamp.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { setConnectionStatus } from '../actions/simpl';\nimport { CONNECTION_STATUS } from '../constants';\n\nimport { wampOptionsWithDefaults, wampSetup } from './utils';\n\n/**\n * @function\n * @memberof Simpl.decorators\n */\nexport function wamp(options = {}) {\n  return (Component) => {\n    const optionsWithDefaults = wampOptionsWithDefaults(options);\n\n    class Wamp extends React.Component {\n      componentWillMount() {\n        wampSetup(this, optionsWithDefaults);\n      }\n      render() {\n        if (this.props.connectionStatus === CONNECTION_STATUS.CONNECTING) {\n          return (\n            <div className={`wamp wamp-${this.props.connectionStatus}`}>\n              <optionsWithDefaults.progressComponent {...this.props} />\n            </div>\n          );\n        }\n        return (\n          <div className={`wamp wamp-${this.props.connectionStatus}`}>\n            <Component {...this.props} />\n          </div>\n        );\n      }\n    }\n\n    Wamp.propTypes = {\n      onReady: React.PropTypes.func,\n      connectionStatus: React.PropTypes.string.isRequired,\n      setConnectionStatus: React.PropTypes.func.isRequired,\n    };\n\n    const mapStateToProps = (state) => ({\n      connectionStatus: state.simpl.connectionStatus,\n    });\n\n    const mapDispatchToProps = (dispatch) => ({\n      setConnectionStatus(status) {\n        dispatch(setConnectionStatus(status));\n      },\n    });\n\n    return connect(mapStateToProps, mapDispatchToProps)(Wamp);\n  };\n}\n\nexport default wamp;\n",
    "static": true,
    "longname": "src/decorators/wamp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "wamp",
    "memberof": "src/decorators/wamp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/decorators/wamp.js~wamp",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/decorators/wamp",
    "importStyle": "{wamp}",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/index.js",
    "content": "import actions from './actions';\nimport autobahn from './autobahn';\nimport components from './components';\nimport decorators from './decorators';\nimport reducers from './reducers';\nimport stores from './stores';\nimport utils from './utils';\n\n\n/**\n * @module Simpl\n * @namespace Simpl\n */\nexport default {\n  actions,\n  autobahn,\n  components,\n  decorators,\n  reducers,\n  stores,\n  utils,\n};\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/reducers/combined.js",
    "content": "/**\n * @namespace combined\n * @memberof Simpl.reducers\n */\nimport { combineReducers } from 'redux';\n\nimport { routerReducer as routing } from 'react-router-redux';\nimport { reducer as form } from 'redux-form';\n\nimport simpl from './simpl';\n\n\nexport function routerReducers(reducers) {\n  const combined = Object.assign({}, reducers, {\n    routing,\n  });\n  return combineReducers(combined);\n}\n\nexport function wampReducers(reducers) {\n  const combined = Object.assign({}, reducers, {\n    routing,\n  });\n  return combineReducers(combined);\n}\n\n/**\n * Returns a reducer function for your reducers, qdding two additional reducers\n * for `routing` and `simpl` state.\n *\n * @param      {object}  reducers  Your custom reducers\n * @return     {function}  A reducer function\n */\nexport function simplReducers(reducers) {\n  const combined = Object.assign({}, reducers, {\n    routing,\n    simpl,\n    form,\n  });\n  return combineReducers(combined);\n}\n\nexport default {\n  routing: routerReducers,\n  simplReducers,\n};\n",
    "static": true,
    "longname": "src/reducers/combined.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "routerReducers",
    "memberof": "src/reducers/combined.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/combined.js~routerReducers",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/combined",
    "importStyle": "{routerReducers}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "reducers",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "wampReducers",
    "memberof": "src/reducers/combined.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/combined.js~wampReducers",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/combined",
    "importStyle": "{wampReducers}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "reducers",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "simplReducers",
    "memberof": "src/reducers/combined.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/combined.js~simplReducers",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/combined",
    "importStyle": "{simplReducers}",
    "description": "Returns a reducer function for your reducers, qdding two additional reducers\nfor `routing` and `simpl` state.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "reducers",
        "description": "Your custom reducers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "A reducer function"
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/reducers/index.js",
    "content": "import combined from './combined';\nimport messages from './messages';\nimport simpl from './simpl';\n\nexport const combinedReducer = combined;\nexport const messagesReducer = messages;\nexport const simplReducer = simpl;\n\n/**\n * @namespace reducers\n * @memberof Simpl\n */\nexport default {\n  combined,\n  messages,\n  simpl,\n};\n",
    "static": true,
    "longname": "src/reducers/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "combinedReducer",
    "memberof": "src/reducers/index.js",
    "static": true,
    "longname": "src/reducers/index.js~combinedReducer",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/index",
    "importStyle": "{combinedReducer}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "messagesReducer",
    "memberof": "src/reducers/index.js",
    "static": true,
    "longname": "src/reducers/index.js~messagesReducer",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/index",
    "importStyle": "{messagesReducer}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "simplReducer",
    "memberof": "src/reducers/index.js",
    "static": true,
    "longname": "src/reducers/index.js~simplReducer",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/index",
    "importStyle": "{simplReducer}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/reducers/messages.js",
    "content": "import { createReducer } from 'redux-create-reducer';\nimport recycleState from 'redux-recycle';\n\nconst MessageActions = require('../actions/messages');\nconst StateActions = require('../actions/state');\n\n\nconst initial = {\n};\n\nconst Message = function Message(payload) {\n  return { args: payload[0], kwargs: payload[1], details: payload[2] };\n};\n\nconst messages = recycleState(createReducer(initial, {\n  [MessageActions.appendMessage](state, action) {\n    const payload = action.payload;\n    const variable = payload.variable;\n    // eslint-disable-next-line new-cap\n    const message = Message(payload);\n\n    const newVar = [...state[variable] || [], message];\n\n    return Object.assign({}, state, { [variable]: newVar });\n  },\n  [MessageActions.updateMessage](state, action) {\n    const payload = action.payload;\n    const variable = payload.variable;\n    // eslint-disable-next-line new-cap\n    const message = Message(payload);\n\n    return Object.assign({}, state, { [variable]: message });\n  },\n}), `${StateActions.recycleState}`);\n\nexport default messages;\n",
    "static": true,
    "longname": "src/reducers/messages.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "MessageActions",
    "memberof": "src/reducers/messages.js",
    "static": true,
    "longname": "src/reducers/messages.js~MessageActions",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/messages",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "StateActions",
    "memberof": "src/reducers/messages.js",
    "static": true,
    "longname": "src/reducers/messages.js~StateActions",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/messages",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "initial",
    "memberof": "src/reducers/messages.js",
    "static": true,
    "longname": "src/reducers/messages.js~initial",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/messages",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "Message",
    "memberof": "src/reducers/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/messages.js~Message",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/messages",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"args\": *, \"kwargs\": *, \"details\": *}"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "messages",
    "memberof": "src/reducers/messages.js",
    "static": true,
    "longname": "src/reducers/messages.js~messages",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/messages",
    "importStyle": "messages",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/reducers/simpl.js",
    "content": "import { createReducer } from 'redux-create-reducer';\nimport recycleState from 'redux-recycle';\n\nconst SimplActions = require('../actions/simpl');\nconst StateActions = require('../actions/state');\n\nimport { CONNECTION_STATUS } from '../constants';\nimport { popAtIndex, updateInCollection } from '../utils/collections';\n\n\nconst initial = {\n  treeLoaded: false,\n  phasesLoaded: false,\n  rolesLoaded: false,\n  scenariosLoaded: false,\n  connectionStatus: CONNECTION_STATUS.CONNECTING,\n  current_runuser: {},\n  current: {},\n  run: [],\n  runuser: [],\n  world: [],\n  scenario: [],\n  period: [],\n  decision: [],\n  result: [],\n  phase: [],\n  role: [],\n  errors: [],\n};\n\nconst simpl = recycleState(createReducer(initial, {\n  handleError(state, action) {\n    return state;\n  },\n  addChild(state, action) {\n    const key = action.payload.resource_name;\n    const kwargs = Object.assign({}, action.payload.data, {\n      pk: action.payload.pk,\n      resource_name: action.payload.resource_name,\n    });\n\n    const index = state[key].findIndex((scope) => scope.pk === action.payload.pk);\n    let items;\n    if (index > -1) {\n      items = updateInCollection(state[key], index, kwargs);\n    } else {\n      items = [...state[key] || {}, kwargs];\n    }\n    return Object.assign({}, state, { [key]: items });\n  },\n  getDataTree(state, action) {\n    const newState = this.addChild(state, action);\n    return action.payload.children.reduce(\n      (memo, child) => this.getDataTree(memo, { payload: child })\n    , newState);\n  },\n  [SimplActions.addChild](state, action) {\n    return this.addChild(state, action);\n  },\n  [SimplActions.removeChild](state, action) {\n    const key = action.payload.resource_name;\n    const index = state[key].findIndex((scope) => scope.pk === action.payload.pk);\n    const updated = popAtIndex(state[key], index);\n    return Object.assign({}, state, { [key]: updated });\n  },\n  [SimplActions.getRunUsers](state, action) {\n    if (action.payload.error) {\n      return this.handleError(state, action);\n    }\n    return action.payload.reduce((memo, child) => (\n      this.addChild(memo, { payload: child })\n    ), Object.assign({}, state));\n  },\n  [SimplActions.getDataTree](state, action) {\n    if (action.payload.error) {\n      return this.handleError(state, action);\n    }\n    let connectionStatus = state.connectionStatus;\n    if (state.phasesLoaded) {\n      connectionStatus = CONNECTION_STATUS.CONNECTED; // TODO why CONNECTION_STATUS.CONNECTED?\n    }\n    return Object.assign({}, this.getDataTree(Object.assign({}, state), action), {\n      treeLoaded: true,\n      connectionStatus,\n    });\n  },\n  [SimplActions.updateScope](state, action) {\n    const key = action.payload.resource_name;\n    const data = Object.assign({}, action.payload.data, { pk: action.payload.pk });\n    const index = state[key].findIndex((scope) => scope.pk === action.payload.pk);\n    if (index === -1) {\n      return state;\n    }\n    const newCollection = updateInCollection(state[key], index, data);\n\n    return Object.assign({}, state, { [key]: newCollection });\n  },\n  [SimplActions.getCurrentRunPhase](state, action) {\n    const runState = this.addChild(state, { payload: action.payload.run });\n\n    return Object.assign({}, runState, {\n      current: {\n        run: action.payload.run.pk,\n        phase: action.payload.phase.pk,\n      },\n    });\n  },\n  [SimplActions.getRunUserInfo](state, action) {\n    // Get the current user's info into the current_runuser namespace\n    if (state.runuser.length == 0) {\n      throw \"Runusers aren't loaded yet. You need to call `getRunUsers` before calling `getRunUserInfo`.\";\n    }\n    const simpl_id = action.payload;\n    const roleTypes = new Set();\n    let foundRunuser;\n\n    state.runuser.forEach((runuser) => {\n      if (runuser.role_name) {\n        roleTypes.add(runuser.role_name);\n      }\n\n      if (runuser.user === simpl_id) {\n        foundRunuser = runuser;\n      }\n    });\n\n    // Remove this current_runuser's role and we're left with the \"other\" role names\n    roleTypes.delete(foundRunuser.role_name);\n    foundRunuser.other_roles = Array.from(roleTypes);\n    return Object.assign({}, state, { current_runuser: foundRunuser });\n  },\n  [SimplActions.getRunUserScenarios](state, action) {\n    if (action.payload.error) {\n      return this.handleError(state, action);\n    }\n    let connectionStatus = state.connectionStatus;\n    if (state.treeLoaded && state.rolesLoaded && state.phasesLoaded) {\n      connectionStatus = CONNECTION_STATUS.LOADED;\n    }\n    let newState = {...state};\n    action.payload.forEach((scenario) => {\n      newState = this.getDataTree(newState, {payload: scenario});\n    });\n    // return newState;\n    return Object.assign({}, newState, {\n      scenariosLoaded: true,\n      connectionStatus,\n    });\n  },\n  [SimplActions.getPhases](state, action) {\n    let connectionStatus = state.connectionStatus;\n    if (state.treeLoaded && state.rolesLoaded && state.scenariosLoaded) {\n      connectionStatus = CONNECTION_STATUS.LOADED;\n    }\n    return Object.assign({}, state, {\n      phase: action.payload,\n      phasesLoaded: true,\n      connectionStatus,\n    });\n  },\n  [SimplActions.getRoles](state, action) {\n    let connectionStatus = state.connectionStatus;\n    if (state.treeLoaded && state.phasesLoaded && state.scenariosLoaded) {\n      connectionStatus = CONNECTION_STATUS.LOADED;\n    }\n    return Object.assign({}, state, {\n      role: action.payload,\n      rolesLoaded: true,\n      connectionStatus,\n    });\n  },\n  [SimplActions.setConnectionStatus](state, action) {\n    return Object.assign({}, state, { connectionStatus: action.payload });\n  },\n  [SimplActions.showGenericError](state, action) {\n    const error = { msg: action.payload[0] };\n    const errors = [...state.errors, error];\n    return Object.assign({}, state, { errors });\n  },\n  [SimplActions.popError](state) {\n    const errors = [...state.errors];\n    errors.pop();\n    return Object.assign({}, state, { errors });\n  },\n}), `${StateActions.recycleState}`);\n\nexport default simpl;\n",
    "static": true,
    "longname": "src/reducers/simpl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "SimplActions",
    "memberof": "src/reducers/simpl.js",
    "static": true,
    "longname": "src/reducers/simpl.js~SimplActions",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/simpl",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "StateActions",
    "memberof": "src/reducers/simpl.js",
    "static": true,
    "longname": "src/reducers/simpl.js~StateActions",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/simpl",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "initial",
    "memberof": "src/reducers/simpl.js",
    "static": true,
    "longname": "src/reducers/simpl.js~initial",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/reducers/simpl",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"treeLoaded\": *, \"phasesLoaded\": *, \"rolesLoaded\": *, \"scenariosLoaded\": *, \"connectionStatus\": *, \"current_runuser\": *, \"current\": *, \"run\": *, \"runuser\": *, \"world\": *, \"scenario\": *, \"period\": *, \"decision\": *, \"result\": *, \"phase\": *, \"role\": *, \"errors\": *}"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "simpl",
    "memberof": "src/reducers/simpl.js",
    "static": true,
    "longname": "src/reducers/simpl.js~simpl",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/reducers/simpl",
    "importStyle": "simpl",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/stores.js",
    "content": "/**\n * @namespace stores\n * @memberof Simpl\n */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reduxReactRouter } from 'redux-router';\n\nimport promiseMiddleware from 'redux-promise';\nimport thunkMiddleware from 'redux-thunk';\nimport createLogger from 'redux-logger';\n\nimport createHistory from 'history/lib/createBrowserHistory';\n\nconst loggerMiddleware = createLogger();\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst defaultMiddlewares = [\n  applyMiddleware(promiseMiddleware),\n  applyMiddleware(thunkMiddleware),\n  reduxReactRouter({ createHistory }),\n];\n\n/**\n * Adds promise, thunk, router and dev tools middlewares to your store\n *\n * @param      {string}  NODE_ENV  The node env\n * @return     {function}  a `createStore` factory\n */\nexport function finalCreateStoreFactory(NODE_ENV) {\n  const middlewares = [...defaultMiddlewares];\n  if (NODE_ENV !== 'production'\n    // eslint-disable-next-line no-underscore-dangle\n    && typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'undefined') {\n    middlewares.push(applyMiddleware(loggerMiddleware));\n  }\n  return composeEnhancers(\n    ...middlewares\n  )(createStore);\n}\n\n\nexport default {\n  finalCreateStoreFactory,\n};\n",
    "static": true,
    "longname": "src/stores.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "loggerMiddleware",
    "memberof": "src/stores.js",
    "static": true,
    "longname": "src/stores.js~loggerMiddleware",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/stores",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "composeEnhancers",
    "memberof": "src/stores.js",
    "static": true,
    "longname": "src/stores.js~composeEnhancers",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/stores",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "defaultMiddlewares",
    "memberof": "src/stores.js",
    "static": true,
    "longname": "src/stores.js~defaultMiddlewares",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/stores",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "finalCreateStoreFactory",
    "memberof": "src/stores.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stores.js~finalCreateStoreFactory",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/stores",
    "importStyle": "{finalCreateStoreFactory}",
    "description": "Adds promise, thunk, router and dev tools middlewares to your store",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "NODE_ENV",
        "description": "The node env"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "a `createStore` factory"
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/test/index.js",
    "content": "import store from './store';\n\n\n/**\n * @namespace test\n * @memberof Simpl\n */\nexport default {\n  store,\n};\n",
    "static": true,
    "longname": "src/test/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/test/store.js",
    "content": "import { finalCreateStoreFactory } from '../stores';\nimport { simplReducers } from '../reducers/combined';\n\nconst rootReducer = simplReducers({});\n\n\nfunction configureStore(initialState) {\n  const finalCreateStore = finalCreateStoreFactory('production');\n  const store = finalCreateStore(rootReducer, initialState);\n\n  return store;\n}\n\n/**\n * A minimal, pre-configured store that can be used for testing.\n\n * @function store\n * @memberof Simpl.test\n */\nexport const store = configureStore();\n\nexport default store;\n",
    "static": true,
    "longname": "src/test/store.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "rootReducer",
    "memberof": "src/test/store.js",
    "static": true,
    "longname": "src/test/store.js~rootReducer",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/test/store",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "configureStore",
    "memberof": "src/test/store.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/test/store.js~configureStore",
    "access": null,
    "export": false,
    "importPath": "simpl/lib/test/store",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "initialState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "store",
    "memberof": "src/test/store.js",
    "static": true,
    "longname": "src/test/store.js~store",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/test/store",
    "importStyle": "{store}",
    "description": "A minimal, pre-configured store that can be used for testing.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": "store"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/utils/collections.js",
    "content": "export function updateInCollection(collection, index, updates) {\n  if (index === undefined || index === null || index >= collection.length) {\n    return [...collection, Object.assign({}, updates)];\n  }\n  return [\n    ...collection.slice(0, index),\n    Object.assign({}, collection[index], updates),\n    ...collection.slice(index + 1),\n  ];\n}\n\nexport function updateCollection(collection, updates) {\n  return collection.map((item) => Object.assign({}, item, updates));\n}\n\nexport function popAtIndex(collection, index) {\n  if (index < 0) {\n    return collection.slice(0, index);\n  }\n  return [\n    ...collection.slice(0, index),\n    ...collection.slice(index + 1, collection.length),\n  ];\n}\n\n\nexport default {\n  updateInCollection,\n  updateCollection,\n  popAtIndex,\n};\n",
    "static": true,
    "longname": "src/utils/collections.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "updateInCollection",
    "memberof": "src/utils/collections.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/collections.js~updateInCollection",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/utils/collections",
    "importStyle": "{updateInCollection}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "collection",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "types": [
          "*"
        ]
      },
      {
        "name": "updates",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "updateCollection",
    "memberof": "src/utils/collections.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/collections.js~updateCollection",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/utils/collections",
    "importStyle": "{updateCollection}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "collection",
        "types": [
          "*"
        ]
      },
      {
        "name": "updates",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "popAtIndex",
    "memberof": "src/utils/collections.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/collections.js~popAtIndex",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/utils/collections",
    "importStyle": "{popAtIndex}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "collection",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/utils/index.js",
    "content": "import collections from './collections';\nimport reducers from './reducers';\n\n\n/**\n * @namespace utils\n * @memberof Simpl\n */\nexport default {\n  collections,\n  reducers,\n};\n",
    "static": true,
    "longname": "src/utils/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/utils/reducers.js",
    "content": "import { updateInCollection } from './collections';\n\n\nexport function updateObjectOrCollection(state, action, updates) {\n  let collection;\n\n  if (action.payload.key !== undefined) {\n    collection = updateInCollection(state, action.payload.key, updates);\n  } else {\n    collection = Object.assign({}, state, updates);\n  }\n  return collection;\n}\n\nexport default {\n  updateObjectOrCollection,\n};\n",
    "static": true,
    "longname": "src/utils/reducers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "updateObjectOrCollection",
    "memberof": "src/utils/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reducers.js~updateObjectOrCollection",
    "access": null,
    "export": true,
    "importPath": "simpl/lib/utils/reducers",
    "importStyle": "{updateObjectOrCollection}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "updates",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]